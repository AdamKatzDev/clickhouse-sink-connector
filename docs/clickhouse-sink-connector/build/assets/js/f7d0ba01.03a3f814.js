"use strict";(self.webpackChunkclickhouse_sink_connector=self.webpackChunkclickhouse_sink_connector||[]).push([[7369],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const i={},a=void 0,l={unversionedId:"doc/debezium_setup",id:"doc/debezium_setup",title:"debezium_setup",description:"Set the binlog position manually(Debezium connector)",source:"@site/docs/doc/debezium_setup.md",sourceDirName:"doc",slug:"/doc/debezium_setup",permalink:"/clickhouse-sink-connector/docs/doc/debezium_setup",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/doc/debezium_setup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/clickhouse-sink-connector/docs/doc/architecture"},next:{title:"README",permalink:"/clickhouse-sink-connector/docs/doc/img/"}},s={},c=[{value:"Set the binlog position manually(Debezium connector)",id:"set-the-binlog-position-manuallydebezium-connector",level:2},{value:"Required Parameters.",id:"required-parameters",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"set-the-binlog-position-manuallydebezium-connector"},"Set the binlog position manually(Debezium connector)"),(0,r.kt)("p",null,"As documented in the following link, user might use other methods(like MyDumper) to perform\nthe initial snapshot or dump of data from MySQL."),(0,r.kt)("p",null,"After the initial load, debezium can be configured to start streaming from a particular binlog\nposition.\n",(0,r.kt)("a",{parentName:"p",href:"https://debezium.io/documentation/faq/#how_to_change_the_offsets_of_the_source_database"},"https://debezium.io/documentation/faq/#how_to_change_the_offsets_of_the_source_database")),(0,r.kt)("p",null,"Note the debezium connector should be stopped before performing the following steps"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"debezium          | 2022-08-27 10:26:32,823 INFO   MySQL|SERVER5432|snapshot     using binlog 'mysql-bin.000003' at position '197' and gtid '23a17d59-25f2-11ed-b442-0242ac170006:1-56'   [io.debezium.connector.mysql.MySqlSnapshotChangeEventSource]\n")),(0,r.kt)("h3",{id:"required-parameters"},"Required Parameters."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h4",{parentName:"li",id:"binlog-file-and-position"},"binlog file and position"),"bin_log file: ",(0,r.kt)("inlineCode",{parentName:"li"},"file"),"\\\nbin_log position: ",(0,r.kt)("inlineCode",{parentName:"li"},"pos")," \\\n(This can be retrieved by running\nthe\n",(0,r.kt)("inlineCode",{parentName:"li"},"show binlog events in mysql-bin.000001"),"\ncommand in mysql prompt.)"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h5",{parentName:"li",id:"connector-name"},"Connector name:"),"The name of the debezium connector, this is defined\nin the connector configuration JSON.\n",(0,r.kt)("inlineCode",{parentName:"li"},'        "name": "${CONNECTOR_NAME}",'),(0,r.kt)("a",{parentName:"li",href:"../deploy/debezium-connector-setup-schema-registry.sh"},"debezium-connector"),"\n`"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h5",{parentName:"li",id:"debezium-offset-topic"},"Debezium offset topic."),(0,r.kt)("inlineCode",{parentName:"li"},"offset-storage-topic-debezium"))),(0,r.kt)("p",null,"This topic is created after debezium is started,\nusing ",(0,r.kt)("inlineCode",{parentName:"p"},"rpk topic list"),"\nthe topic can be identified."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h5",{parentName:"li",id:"edit-the-payload-to-set-the-above-parameters"},"Edit the payload to set the above parameters"))),(0,r.kt)("p",null,"In this example, we set the binlog file to ",(0,r.kt)("inlineCode",{parentName:"p"},"mysql-bin.000002"),"\nbinlog position to ",(0,r.kt)("inlineCode",{parentName:"p"},"8592550"),"\nand gtids to ",(0,r.kt)("inlineCode",{parentName:"p"},"063c62eb-25e1-11ed-b41c-0242ac160004:37")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n"topic": "offset-storage-topic-debezium",\n"key": "[\\"test-connector\\",{\\"server\\":\\"SERVER5432\\"}]",\n"value": "{\\"ts_sec\\":1661595997,\\"file\\":\\"mysql-bin.000002\\\u201d,\\\u201dpos\\":8592550,\\"gtids\\":\\"063c62eb-25e1-11ed-b41c-0242ac160004:37\\"}",\n"timestamp": 1661596039799,\n"partition": 22,\n"offset": 0\n}\n')),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h5",{parentName:"li",id:"set-the-snapshotmode-in-the-connector"},"Set the snapshot.mode in the connector."),"Set the snapshot.mode to ",(0,r.kt)("inlineCode",{parentName:"li"},"schema_only_recovery"))),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h5",{parentName:"li",id:"use-kafkacat-to-produce-the-payloadcreated-in-step-4-to-the-offset-storage-topic"},"Use kafkacat to produce the payload(created in step 4) to the offset storage topic"),"For mac replace kafkacat with kcat.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'echo \'["test-connector",{"server":"SERVER5432"}]|{"ts_sec":1530168950,"file":"mysql-bin.000002","pos":8592550, "server_id": 494}\' | \\\nkafkacat -P -b localhost:19092 -t offset-storage-topic-debezium -K \\| -p 22\n')),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("h5",{parentName:"li",id:"start-the-connector-and-monitor-the-logs"},"Start the connector and monitor the logs."))),(0,r.kt)("p",null,"The logs should mention the binlog file and position."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"debezium          | 2022-08-28 16:03:02,545 INFO   MySQL|SERVER5432|binlog  Connected to MySQL binlog at mysql-master:3306, starting at MySqlOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.mysql.Source:STRUCT}, sourceInfo=SourceInfo [currentGtid=null, currentBinlogFilename=mysql-bin.000002, currentBinlogPosition=8592550, currentRowNumber=0, serverId=0, sourceTime=2022-08-28T16:03:02.134Z, threadId=-1, currentQuery=null, tableIds=[test.products], databaseName=test], snapshotCompleted=true, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], restartGtidSet=null, currentGtidSet=null, restartBinlogFilename=mysql-bin.000002, restartBinlogPosition=8592550, restartRowsToSkip=0, restartEventsToSkip=0, currentEventLengthInBytes=0, inTransaction=false, transactionId=null, incrementalSnapshotContext =IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]]   [io.debezium.connector.mysql.MySqlStreamingChangeEventSource]\ndebezium          | 2022-08-28 16:03:02,548 INFO   MySQL|SERVER5432|streaming  Waiting for kee\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"debezium          | 2022-08-28 16:03:02,105 INFO   ||  18 records sent during previous 00:00:16.413, last recorded offset: {ts_sec=1661702581, file=mysql-bin.000002, pos=8592550, snapshot=true}   [io.debezium.connector.common.BaseSourceTask]\n")))}d.isMDXComponent=!0}}]);